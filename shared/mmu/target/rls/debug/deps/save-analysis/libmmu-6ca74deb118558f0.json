{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/zom/Github/folpi/shared/mmu","program":"/home/zom/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":[],"output":"/home/zom/Github/folpi/shared/mmu/target/rls/debug/deps/libmmu-6ca74deb118558f0.rmeta"},"prelude":{"crate_id":{"name":"mmu","disambiguator":[5571273973662983661,0]},"crate_root":"src","external_crates":[{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3258587377571634522,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14734022683551305286,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10243729231267934160,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8101236025053423316,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11118192541038501967,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4803243385650643145,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10391448188227995668,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10508320492958975759,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[882790968656654817,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13168123047911546078,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10989721547854533494,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11575714727403698807,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14182450197913211420,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16824499480220764467,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[7718077299864263296,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[1216276473538902749,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[5697966681414718926,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8142057089495992726,0]}},{"file_name":"/home/zom/Github/folpi/shared/mmu/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2040882814589570131,0]}}],"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":1436,"line_start":1,"line_end":43,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/lib.rs","byte_start":24,"byte_end":25,"line_start":2,"line_end":2,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"Perm","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":1436,"line_start":1,"line_end":43,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":22}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"src/perm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"perm","qualname":"::perm","value":"src/perm.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":9}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4},"span":{"file_name":"src/perm.rs","byte_start":1483,"byte_end":1492,"line_start":2,"line_end":2,"column_start":11,"column_end":20},"name":"PERM_READ","qualname":"::perm::PERM_READ","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" If the current byte can be read\n","sig":null,"attributes":[{"value":"/ If the current byte can be read","span":{"file_name":"src/perm.rs","byte_start":1437,"byte_end":1472,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":5},"span":{"file_name":"src/perm.rs","byte_start":1557,"byte_end":1567,"line_start":4,"line_end":4,"column_start":11,"column_end":21},"name":"PERM_WRITE","qualname":"::perm::PERM_WRITE","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" If the current byte can be written\n","sig":null,"attributes":[{"value":"/ If the current byte can be written","span":{"file_name":"src/perm.rs","byte_start":1508,"byte_end":1546,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":6},"span":{"file_name":"src/perm.rs","byte_start":1632,"byte_end":1641,"line_start":6,"line_end":6,"column_start":11,"column_end":20},"name":"PERM_EXEC","qualname":"::perm::PERM_EXEC","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" If the current byte can be executed\n","sig":null,"attributes":[{"value":"/ If the current byte can be executed","span":{"file_name":"src/perm.rs","byte_start":1582,"byte_end":1621,"line_start":5,"line_end":5,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":7},"span":{"file_name":"src/perm.rs","byte_start":1736,"byte_end":1744,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"PERM_RAW","qualname":"::perm::PERM_RAW","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" If the current byte can be **Read only After it was Written to**\n","sig":null,"attributes":[{"value":"/ If the current byte can be **Read only After it was Written to**","span":{"file_name":"src/perm.rs","byte_start":1657,"byte_end":1725,"line_start":7,"line_end":7,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":8},"span":{"file_name":"src/perm.rs","byte_start":1848,"byte_end":1856,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"PERM_ACC","qualname":"::perm::PERM_ACC","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Access bit, register if a bit is read. This is used to do taint tracking\n","sig":null,"attributes":[{"value":"/ Access bit, register if a bit is read. This is used to do taint tracking","span":{"file_name":"src/perm.rs","byte_start":1761,"byte_end":1837,"line_start":9,"line_end":9,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":25},"span":{"file_name":"src/perm.rs","byte_start":2065,"byte_end":2069,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Perm","qualname":"::perm::Perm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A permissions byte which corresponds to a memory byte and defines the\n permissions it has\n","sig":null,"attributes":[{"value":"/ A permissions byte which corresponds to a memory byte and defines the","span":{"file_name":"src/perm.rs","byte_start":1874,"byte_end":1947,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ permissions it has","span":{"file_name":"src/perm.rs","byte_start":1948,"byte_end":1970,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"repr(transparent)","span":{"file_name":"src/perm.rs","byte_start":1971,"byte_end":1991,"line_start":14,"line_end":14,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":27},"span":{"file_name":"src/perm.rs","byte_start":2070,"byte_end":2076,"line_start":16,"line_end":16,"column_start":17,"column_end":23},"name":"0","qualname":"::perm::Perm::0","value":"u8","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"src/perm.rs","byte_start":2111,"byte_end":2118,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"default","qualname":"<Perm as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":2967},"children":[],"decl_id":{"krate":2,"index":2968},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12},"span":{"file_name":"src/lib.rs","byte_start":39,"byte_end":47,"line_start":4,"line_end":4,"column_start":12,"column_end":20},"name":"VirtAddr","qualname":"::VirtAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14},"span":{"file_name":"src/lib.rs","byte_start":48,"byte_end":53,"line_start":4,"line_end":4,"column_start":21,"column_end":26},"name":"0","qualname":"::VirtAddr::0","value":"usize","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15},"span":{"file_name":"src/lib.rs","byte_start":557,"byte_end":560,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"Mmu","qualname":"::Mmu","value":"Mmu { memory, permissions, dirty, dirty_bitmap, cur_alc }","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" An isolated memory space\n \n `DIRTY_BLOCK_SIZE` is the Block size used for resetting and tracking memory \n which has been modified.\n The larger this is, the fewer but more expensive memcpys() need to occur,\n the small, the greater but less expensive memcpys() need to occur.\n It seems the sweet spot is often 128-4096 bytes\n \n This is a generic const instead of just a const so that we can tune it for\n different sections, depending on theirs access pattern.\n","sig":null,"attributes":[{"value":"/ An isolated memory space","span":{"file_name":"src/lib.rs","byte_start":57,"byte_end":85,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/ ","span":{"file_name":"src/lib.rs","byte_start":86,"byte_end":90,"line_start":7,"line_end":7,"column_start":1,"column_end":5}},{"value":"/ `DIRTY_BLOCK_SIZE` is the Block size used for resetting and tracking memory ","span":{"file_name":"src/lib.rs","byte_start":91,"byte_end":171,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ which has been modified.","span":{"file_name":"src/lib.rs","byte_start":172,"byte_end":200,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/ The larger this is, the fewer but more expensive memcpys() need to occur,","span":{"file_name":"src/lib.rs","byte_start":201,"byte_end":278,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ the small, the greater but less expensive memcpys() need to occur.","span":{"file_name":"src/lib.rs","byte_start":279,"byte_end":349,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ It seems the sweet spot is often 128-4096 bytes","span":{"file_name":"src/lib.rs","byte_start":350,"byte_end":401,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ ","span":{"file_name":"src/lib.rs","byte_start":402,"byte_end":406,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"/ This is a generic const instead of just a const so that we can tune it for","span":{"file_name":"src/lib.rs","byte_start":407,"byte_end":485,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ different sections, depending on theirs access pattern.","span":{"file_name":"src/lib.rs","byte_start":486,"byte_end":545,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":17},"span":{"file_name":"src/lib.rs","byte_start":714,"byte_end":720,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"memory","qualname":"::Mmu::memory","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" BLock of memory for this address space\n Offset 0 corresponds to address 0 in the guest address space\n","sig":null,"attributes":[{"value":"/ BLock of memory for this address space","span":{"file_name":"src/lib.rs","byte_start":598,"byte_end":640,"line_start":17,"line_end":17,"column_start":5,"column_end":47}},{"value":"/ Offset 0 corresponds to address 0 in the guest address space","span":{"file_name":"src/lib.rs","byte_start":645,"byte_end":709,"line_start":18,"line_end":18,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":18},"span":{"file_name":"src/lib.rs","byte_start":808,"byte_end":819,"line_start":22,"line_end":22,"column_start":5,"column_end":16},"name":"permissions","qualname":"::Mmu::permissions","value":"std::vec::Vec<perm::Perm>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Holds the permission bytes for the corresponding byte in memory\n","sig":null,"attributes":[{"value":"/ Holds the permission bytes for the corresponding byte in memory","span":{"file_name":"src/lib.rs","byte_start":736,"byte_end":803,"line_start":21,"line_end":21,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":19},"span":{"file_name":"src/lib.rs","byte_start":910,"byte_end":915,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"dirty","qualname":"::Mmu::dirty","value":"std::vec::Vec<VirtAddr>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Track the addresses of the block in guest memory which are dirty\n","sig":null,"attributes":[{"value":"/ Track the addresses of the block in guest memory which are dirty","span":{"file_name":"src/lib.rs","byte_start":837,"byte_end":905,"line_start":24,"line_end":24,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":20},"span":{"file_name":"src/lib.rs","byte_start":1067,"byte_end":1079,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"dirty_bitmap","qualname":"::Mmu::dirty_bitmap","value":"std::vec::Vec<u64>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Track which partes of memory have been dirtied, it's used as a filter\n to avoid duplicated entries inside `dirty`.\n","sig":null,"attributes":[{"value":"/ Track which partes of memory have been dirtied, it's used as a filter","span":{"file_name":"src/lib.rs","byte_start":937,"byte_end":1010,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ to avoid duplicated entries inside `dirty`.","span":{"file_name":"src/lib.rs","byte_start":1015,"byte_end":1062,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":21},"span":{"file_name":"src/lib.rs","byte_start":1148,"byte_end":1155,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"cur_alc","qualname":"::Mmu::cur_alc","value":"VirtAddr","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Current base address of the next allocation\n","sig":null,"attributes":[{"value":"/ Current base address of the next allocation","span":{"file_name":"src/lib.rs","byte_start":1096,"byte_end":1143,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Local","id":{"krate":0,"index":1073741848},"span":{"file_name":"src/lib.rs","byte_start":1245,"byte_end":1249,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"name":"size","qualname":"<Mmu<DIRTY_BLOCK_SIZE>>::new::size","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"src/lib.rs","byte_start":1241,"byte_end":1244,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Mmu<DIRTY_BLOCK_SIZE>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"src/perm.rs","byte_start":2097,"byte_end":2101,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"src/lib.rs","byte_start":1206,"byte_end":1209,"line_start":35,"line_end":35,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":4,"byte_end":8,"line_start":1,"line_end":1,"column_start":5,"column_end":9},"ref_id":{"krate":0,"index":3}},{"kind":"Type","span":{"file_name":"src/perm.rs","byte_start":2097,"byte_end":2101,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"ref_id":{"krate":0,"index":25}},{"kind":"Type","span":{"file_name":"src/perm.rs","byte_start":2085,"byte_end":2092,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"ref_id":{"krate":2,"index":2967}},{"kind":"Type","span":{"file_name":"src/perm.rs","byte_start":2139,"byte_end":2143,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":18,"byte_end":22,"line_start":2,"line_end":2,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":722,"byte_end":725,"line_start":19,"line_end":19,"column_start":13,"column_end":16},"ref_id":{"krate":5,"index":7049}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":821,"byte_end":824,"line_start":22,"line_end":22,"column_start":18,"column_end":21},"ref_id":{"krate":5,"index":7049}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":825,"byte_end":829,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"ref_id":{"krate":0,"index":25}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":917,"byte_end":920,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"ref_id":{"krate":5,"index":7049}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":921,"byte_end":929,"line_start":25,"line_end":25,"column_start":16,"column_end":24},"ref_id":{"krate":0,"index":12}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":1081,"byte_end":1084,"line_start":29,"line_end":29,"column_start":19,"column_end":22},"ref_id":{"krate":5,"index":7049}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":1157,"byte_end":1165,"line_start":32,"line_end":32,"column_start":14,"column_end":22},"ref_id":{"krate":0,"index":12}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":1206,"byte_end":1209,"line_start":35,"line_end":35,"column_start":37,"column_end":40},"ref_id":{"krate":0,"index":15}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1210,"byte_end":1226,"line_start":35,"line_end":35,"column_start":41,"column_end":57},"ref_id":{"krate":0,"index":23}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":1276,"byte_end":1279,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":15}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1294,"byte_end":1300,"line_start":38,"line_end":38,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":17}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1310,"byte_end":1314,"line_start":38,"line_end":38,"column_start":29,"column_end":33},"ref_id":{"krate":0,"index":1073741848}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1329,"byte_end":1340,"line_start":39,"line_end":39,"column_start":13,"column_end":24},"ref_id":{"krate":0,"index":18}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1353,"byte_end":1360,"line_start":39,"line_end":39,"column_start":37,"column_end":44},"ref_id":{"krate":2,"index":2968}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":1347,"byte_end":1351,"line_start":39,"line_end":39,"column_start":31,"column_end":35},"ref_id":{"krate":0,"index":25}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1364,"byte_end":1368,"line_start":39,"line_end":39,"column_start":48,"column_end":52},"ref_id":{"krate":0,"index":1073741848}}],"macro_refs":[],"relations":[{"span":{"file_name":"src/perm.rs","byte_start":2097,"byte_end":2101,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":25},"to":{"krate":2,"index":2967}},{"span":{"file_name":"src/lib.rs","byte_start":1206,"byte_end":1209,"line_start":35,"line_end":35,"column_start":37,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":15},"to":{"krate":4294967295,"index":4294967295}}]}